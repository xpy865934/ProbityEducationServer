package com.xpy.utils;

import java.sql.Connection;
import java.sql.SQLException;

import javax.sql.DataSource;

import com.mchange.v2.c3p0.ComboPooledDataSource;

/**
 * 数据连接工具类，使用本类必须提供c3p0-config.xml
 * @author xpy
 *
 */
public class JDBCUtils {
	//饿汉式
	private static DataSource ds = new ComboPooledDataSource();
	
	/**
	 * null 表示没有事务
	 * 不为null 表示有事务
	 * 当开启事务时，需要给它赋值
	 * 当结束事务时，需要赋值为null
	 * 开启事务时，让dao的多个方法共享这个Connection
	 */
	private static ThreadLocal<Connection> tl = new ThreadLocal<Connection>();
	
	public static DataSource getDataSource() {
		return ds;
	}
	
	/**
	 * dao调用本方法获取连接
	 * @return
	 * @throws SQLException
	 */
	public static Connection getConnection() throws SQLException {
		/**
		 * 如果有事务，返回当前事务的con
		 * 如果没有事务，通过连接池返回新的con
		 */
		Connection con = tl.get();//获取当前线程的事务连接
		if(con!=null) 
			return con;
		return ds.getConnection();
	}
	
	/**
	 * 开启事务
	 * @throws SQLException
	 */
	public static void beginTransaction() throws SQLException {
		Connection con = tl.get();
		if(con!=null)
			throw new SQLException("已经开启了事务，不能重复开启！");
		con = ds.getConnection();//给con赋值，表示开启了事务
		con.setAutoCommit(false);//设置为手动提交
		tl.set(con);//把当前事务连接放到tl中
	}
	
	/**
	 * 提交事务
	 * @throws SQLException
	 */	
	public static void commitTransaction() throws SQLException {
		Connection con = tl.get();
		if(con==null)
			throw new SQLException("没有事务，不能提交！");
		con.commit();
		con.close();
		con=null;
		tl.remove();
	}
	
	/**
	 * 回滚事务
	 * @throws SQLException
	 */
	public static void rollbackTransaction() throws SQLException {
		Connection con = tl.get();
		if(con==null) throw new SQLException("没有事务，不能回滚！");
		con.rollback();
		con.close();
		con=null;
		tl.remove();
	}
	
	public static void releaseConnection(Connection connection) throws SQLException {
		Connection con = tl.get();//获取当前线程的事务连接
		if(connection!=con) {//如果参数连接，与当前事务连接不同，说明这个连接不是当前事务
			if(connection!=null && !connection.isClosed()) {//如果参数连接没有关闭，则关闭
				connection.close();
			}
		}
	}
	
	

}
